{"ast":null,"code":"var _jsxFileName = \"/Users/burak/Projects/ticket-tracer-ui/src/pages/TrainListPage.js\",\n  _s = $RefreshSig$();\n// src/pages/TrainListPage.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TrainDetails from \"../components/TrainDetails\";\nimport SuccessMessage from \"../components/SuccessMessage\";\nimport \"./TrainListPage.css\";\nimport { API_URL_ADD } from \"../constants/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainListPage = ({\n  trainData,\n  onBack\n}) => {\n  _s();\n  const [selectedTrains, setSelectedTrains] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const handleSelectTrain = train => {\n    if (selectedTrains.some(selectedTrain => selectedTrain.trainID === train.trainID)) {\n      setSelectedTrains(selectedTrains.filter(selectedTrain => selectedTrain.trainID !== train.trainID));\n    } else {\n      if (selectedTrains.length < 3) {\n        setSelectedTrains([...selectedTrains, train]);\n      } else {\n        alert(\"En fazla 3 sefer seçebilirsiniz.\");\n      }\n    }\n  };\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleEmailValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setEmailError(\"Geçerli bir email adresi girin.\");\n      return false;\n    }\n    setEmailError(\"\");\n    return true;\n  };\n  const handleAddButtonClick = () => {\n    if (handleEmailValidation()) {\n      const requestPayload = selectedTrains.map(train => ({\n        trainID: train.trainID,\n        tourID: train.tourID,\n        gidisTarih: train.departureDate,\n        binisIstasyon: train.departureStation,\n        inisIstasyonu: train.arrivalStation,\n        email,\n        binisIstasyonId: train.departureStationID,\n        inisIstasyonId: train.arrivalStationID\n      }));\n      axios.post(API_URL_ADD, {\n        request: requestPayload\n      }).then(response => {\n        setShowSuccessMessage(true);\n      }).catch(error => {\n        console.error(\"Ekleme sırasında bir hata oluştu:\", error);\n        alert(\"Ekleme sırasında bir hata oluştu.\");\n      });\n    }\n  };\n  const handleSuccessClose = () => {\n    setShowSuccessMessage(false);\n    onBack();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"train-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tren Seferleri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"train-list\",\n      children: trainData && trainData.details ? trainData.details.map(train => /*#__PURE__*/_jsxDEV(TrainDetails, {\n        train: train,\n        onSelect: handleSelectTrain,\n        isSelected: selectedTrains.some(selectedTrain => selectedTrain.trainID === train.trainID)\n      }, train.trainID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tren seferleri y\\xFCklenemedi.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        onBlur: handleEmailValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: \"red\"\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddButtonClick,\n      className: \"btn-add\",\n      children: \"Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"btn-back\",\n      children: \"Geri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      onClose: handleSuccessClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainListPage, \"rR6kbX4CAWo65EdzrqxVxnggSNg=\");\n_c = TrainListPage;\nexport default TrainListPage;\nvar _c;\n$RefreshReg$(_c, \"TrainListPage\");","map":{"version":3,"names":["React","useState","axios","TrainDetails","SuccessMessage","API_URL_ADD","jsxDEV","_jsxDEV","TrainListPage","trainData","onBack","_s","selectedTrains","setSelectedTrains","email","setEmail","emailError","setEmailError","showSuccessMessage","setShowSuccessMessage","handleSelectTrain","train","some","selectedTrain","trainID","filter","length","alert","handleEmailChange","e","target","value","handleEmailValidation","emailRegex","test","handleAddButtonClick","requestPayload","map","tourID","gidisTarih","departureDate","binisIstasyon","departureStation","inisIstasyonu","arrivalStation","binisIstasyonId","departureStationID","inisIstasyonId","arrivalStationID","post","request","then","response","catch","error","console","handleSuccessClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","details","onSelect","isSelected","htmlFor","type","id","onChange","onBlur","style","color","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/burak/Projects/ticket-tracer-ui/src/pages/TrainListPage.js"],"sourcesContent":["// src/pages/TrainListPage.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TrainDetails from \"../components/TrainDetails\";\nimport SuccessMessage from \"../components/SuccessMessage\";\nimport \"./TrainListPage.css\";\nimport { API_URL_ADD } from \"../constants/api\";\n\nconst TrainListPage = ({ trainData, onBack }) => {\n  const [selectedTrains, setSelectedTrains] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  const handleSelectTrain = (train) => {\n    if (\n      selectedTrains.some(\n        (selectedTrain) => selectedTrain.trainID === train.trainID\n      )\n    ) {\n      setSelectedTrains(\n        selectedTrains.filter(\n          (selectedTrain) => selectedTrain.trainID !== train.trainID\n        )\n      );\n    } else {\n      if (selectedTrains.length < 3) {\n        setSelectedTrains([...selectedTrains, train]);\n      } else {\n        alert(\"En fazla 3 sefer seçebilirsiniz.\");\n      }\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleEmailValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setEmailError(\"Geçerli bir email adresi girin.\");\n      return false;\n    }\n    setEmailError(\"\");\n    return true;\n  };\n\n  const handleAddButtonClick = () => {\n    if (handleEmailValidation()) {\n      const requestPayload = selectedTrains.map((train) => ({\n        trainID: train.trainID,\n        tourID: train.tourID,\n        gidisTarih: train.departureDate,\n        binisIstasyon: train.departureStation,\n        inisIstasyonu: train.arrivalStation,\n        email,\n        binisIstasyonId: train.departureStationID,\n        inisIstasyonId: train.arrivalStationID,\n      }));\n\n      axios\n        .post(API_URL_ADD, {\n          request: requestPayload,\n        })\n        .then((response) => {\n          setShowSuccessMessage(true);\n        })\n        .catch((error) => {\n          console.error(\"Ekleme sırasında bir hata oluştu:\", error);\n          alert(\"Ekleme sırasında bir hata oluştu.\");\n        });\n    }\n  };\n\n  const handleSuccessClose = () => {\n    setShowSuccessMessage(false);\n    onBack();\n  };\n\n  return (\n    <div className=\"train-list-page\">\n      <h1>Tren Seferleri</h1>\n      <div className=\"train-list\">\n        {trainData && trainData.details ? (\n          trainData.details.map((train) => (\n            <TrainDetails\n              key={train.trainID}\n              train={train}\n              onSelect={handleSelectTrain}\n              isSelected={selectedTrains.some(\n                (selectedTrain) => selectedTrain.trainID === train.trainID\n              )}\n            />\n          ))\n        ) : (\n          <p>Tren seferleri yüklenemedi.</p>\n        )}\n      </div>\n      <div className=\"email-input\">\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n          onBlur={handleEmailValidation}\n        />\n        {emailError && <small style={{ color: \"red\" }}>{emailError}</small>}\n      </div>\n      <button onClick={handleAddButtonClick} className=\"btn-add\">\n        Ekle\n      </button>\n      <button onClick={onBack} className=\"btn-back\">\n        Geri\n      </button>\n      {showSuccessMessage && <SuccessMessage onClose={handleSuccessClose} />}\n    </div>\n  );\n};\n\nexport default TrainListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}